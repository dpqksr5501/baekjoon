#include <iostream>
#include <queue>
using namespace std;
int MAX = 100001;

int bfs(int n, int k) {
    queue<pair<int, int>> q;
    bool visited[MAX] = {false};
    q.push({n, 0});
    visited[n] = true;
    while (!q.empty()) {
        int cur = q.front().first;
        int time = q.front().second;
        q.pop();
        if (cur == k) return time;
        int next_positions[] = {cur - 1, cur + 1, cur * 2};
        for (int next : next_positions) {
            if (next >= 0 && next < MAX && !visited[next]) {
                visited[next] = true;
                q.push({next, time + 1});
            }
        }
    }
    return -1;
}
int main() {
    int n, k;
    cin >> n >> k;
    cout << bfs(n, k) << endl;
}
